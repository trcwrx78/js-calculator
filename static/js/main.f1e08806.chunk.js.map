{"version":3,"sources":["hooks/useMath.js","App.js","index.js"],"names":["Math","useState","lastNum","setLastNum","calculation","setCalculation","nums","numNames","signs","signNames","numButtons","map","num","i","key","id","className","onClick","handleClick","opButtons","sym","e","innerText","target","doCalc","eval","re","split","last","slice","includes","prev","undefined","reverse","findIndex","char","App","useMath","ReactDOM","render","document","getElementById"],"mappings":"wfAGA,SAASA,OAAQ,IAAD,UACkBC,oDAAS,IAD3B,iMACLC,QADK,cACIC,WADJ,yBAE0BF,oDAAS,KAFnC,kMAELG,YAFK,cAEQC,eAFR,cAINC,KAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnCC,SAAW,CAAC,QAAS,QAAS,OAAQ,OAAQ,OAAQ,MAAO,MAAO,MAAO,QAAS,QACpFC,MAAQ,CAAC,IAAK,IAAK,IAAK,KACxBC,UAAY,CAAC,SAAU,WAAY,MAAO,YAE1CC,WAAaJ,KAAKK,KAAI,SAACC,EAAKC,GAC9B,OACI,qEACIC,IAAKF,EACLG,GAAIR,SAASM,GACbG,UAAU,MACVC,QAASC,aACJN,MAKXO,UAAYX,MAAMG,KAAI,SAACS,EAAKP,GAC9B,OACI,qEACIC,IAAKM,EACLL,GAAIN,UAAUI,GACdG,UAAU,cACVC,QAASC,aACJE,MAKjB,SAASF,YAAYG,GAAI,IACbC,UAAcD,EAAEE,OAAhBD,UAER,OAAOA,WACH,IAAK,KACDjB,eAAe,KACf,MAEJ,IAAK,IACD,IAAMmB,OAASC,KAAKrB,aACpBC,eAAemB,QACf,MAEJ,IAAK,IACD,IAAME,GAAKtB,YAAYuB,MAAM,WACvBC,KAAOF,GAAGG,OAAO,GAAG,GAEtBD,KAAKE,SAAS,MACdzB,gBAAe,SAAA0B,GAAI,OAAIA,EAAO,OAElC,MAEJ,QACI,IAAIV,QAAIW,EAER,GAAGxB,MAAMsB,SAASR,WACd,GAAGd,MAAMsB,SAAS5B,UAA0B,MAAdoB,UAAmB,CAC7C,IAAMM,MAAOxB,YAAYuB,MAAM,IAAIM,UAC9BC,WAAU,SAAAC,GAAI,OAAI7B,KAAKwB,UAAUK,MACtCd,GAAIjB,YAAYyB,MAAM,EAAGD,MAAO,GAA5B,WAAqCN,UAArC,UAEJD,GAAC,UAAMjB,YAAN,YAAqBkB,UAArB,UAGLD,GAAoB,MAAhBjB,YAAsBkB,UAAYlB,YAAckB,UAGxDjB,eAAegB,IAEnBlB,WAAWmB,YAGnB,MAAO,CAAEZ,sBAAYS,oBAAWf,wBAAac,yBAGlClB,4B,4ICxDAoC,MApBf,WAAgB,IAAD,EAC+CC,cAApD3B,EADK,EACLA,WAAYS,EADP,EACOA,UAAWf,EADlB,EACkBA,YAAac,EAD/B,EAC+BA,YAE5C,OACE,yBAAKF,UAAU,cACb,8CACA,yBAAKD,GAAG,WACN,2BAAIX,IAEN,yBAAKY,UAAU,aACb,4BAAQD,GAAK,QAAQC,UAAU,gBAAgBC,QAASC,GAAxD,MACCR,EACAS,EACD,4BAAQJ,GAAG,UAAUC,UAAU,MAAMC,QAASC,GAA9C,KACA,4BAAQH,GAAG,SAASC,UAAU,iBAAiBC,QAASC,GAAxD,QCfRoB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f1e08806.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\n\nfunction Math() {\n    const [lastNum, setLastNum] = useState('')\n    const [calculation, setCalculation] = useState('0')\n\n    const nums = [7, 8, 9, 4, 5, 6, 1, 2, 3, 0]\n    const numNames = ['seven', 'eight', 'nine', 'four', 'five', 'six', 'one', 'two', 'three', 'zero']\n    const signs = ['/', '*', '+', '-']\n    const signNames = ['divide', 'multiply', 'add', 'subtract']\n\n    const numButtons = nums.map((num, i) => {\n        return (\n            <button \n                key={num}\n                id={numNames[i]}  \n                className=\"btn\"\n                onClick={handleClick}>\n                    {num}\n            </button>\n        )\n    })\n\n    const opButtons = signs.map((sym, i) => {\n        return (\n            <button \n                key={sym}\n                id={signNames[i]}\n                className=\"btn btn-ops\" \n                onClick={handleClick}>\n                    {sym}\n            </button>\n        )\n    })\n\n    function handleClick(e) {\n        const { innerText } = e.target\n\n        switch(innerText){\n            case 'AC': {\n                setCalculation('0')\n                break\n            }\n            case '=': {\n                const doCalc = eval(calculation)\n                setCalculation(doCalc)\n                break\n            }\n            case '.': {\n                const re = calculation.split(/[+\\-*/]/)\n                const last = re.slice(-1)[0]\n\n                if(!last.includes('.')) {\n                    setCalculation(prev => prev + '.')\n                }\n                break\n            }\n            default: {\n                let e = undefined\n\n                if(signs.includes(innerText)){\n                    if(signs.includes(lastNum) && innerText !== '-') {\n                        const last = calculation.split('').reverse()\n                            .findIndex(char => nums.includes(+char))\n                        e = calculation.slice(0, last + 2) + ` ${innerText} `\n                    } else {\n                        e = `${calculation} ${innerText} `\n                    }\n                } else {\n                    e = calculation === '0' ? innerText : calculation + innerText\n                }\n\n                setCalculation(e)\n            }\n            setLastNum(innerText)\n        }\n    }\n    return { numButtons, opButtons, calculation, handleClick }\n}\n\nexport default Math","import React from 'react'\nimport useMath from './hooks/useMath'\nimport './App.css';\n\n\nfunction App() {\n  const { numButtons, opButtons, calculation, handleClick } = useMath()\n  \n  return (\n    <div className=\"calculator\">\n      <h1>fcc calculator</h1>\n      <div id=\"display\">\n        <p>{calculation}</p>\n      </div>\n      <div className=\"container\">\n        <button id = \"clear\" className=\"btn btn-clear\" onClick={handleClick}>AC</button>\n        {numButtons}\n        {opButtons}\n        <button id=\"decimal\" className=\"btn\" onClick={handleClick}>.</button>\n        <button id=\"equals\" className=\"btn btn-equals\" onClick={handleClick}>=</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}